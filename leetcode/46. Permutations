class Solution:
    def perm(self,ind,nums,ans):
        if ind==len(nums):
            ds=[]
            for i in range(len(nums)):
                ds.append(nums[i])
            ans.append(list(ds))
            return
        for i in range(ind,len(nums)):
            nums[ind],nums[i]=nums[i],nums[ind]
            self.perm(ind+1,nums,ans)
            nums[ind],nums[i]=nums[i],nums[ind]

    def permute(self, nums: List[int]) -> List[List[int]]:
        ans=[]
        self.perm(0,nums,ans)
        return ans
    '''
    def perm(self,nums,ds,ans,freq):
        if len(ds)==len(nums):
            ans.append(list(ds))
            return
        for i in range(len(nums)):
            if not(freq[i]):
                freq[i]=True
                ds.append(nums[i])
                self.perm(nums,ds,ans,freq)
                ds.pop()
                freq[i]=False

    def permute(self, nums: List[int]) -> List[List[int]]:
        ans=[]
        ds=[]
        freq=[False for i in range(len(nums))]
        self.perm(nums,ds,ans,freq)
        return ans
    '''
