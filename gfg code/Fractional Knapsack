#User function Template for python3
from operator import itemgetter
class Item:
    def __init__(self,val,w):
        self.value = val
        self.weight = w
        
class Solution:    
    #Function to get the maximum total value in the knapsack.
    def fractionalknapsack(self, W,arr,N):
        values=[]
        weight=[]
        for i in range(n):
            values.append(arr[i].value)
            weight.append(arr[i].weight)
        valuability=[]
        for i in range(len(values)):
            valuability.append([values[i]/weight[i],weight[i]])
        res=sorted(valuability,key=itemgetter(0),reverse=True)
        total=0
        for i in res:
            if i[1]<W:
                W-=i[1]
                total+=(i[0]*i[1])
            elif W>0:
                total+=(i[0]*W)
                W=0
        return(total)


#{ 
 # Driver Code Starts
#Initial Template for Python 3
import atexit
import io
import sys

#Contributed by : Nagendra Jha

class Item:
    def __init__(self,val,w):
        self.value = val
        self.weight = w
        
if __name__ == '__main__':
    test_cases = int(input())
    for cases in range(test_cases) :
        n,W = map(int,input().strip().split())
        info = list(map(int,input().strip().split()))
        arr = [Item(0,0) for i in range(n)]
        for i in range(n):
            arr[i].value = info[2*i]
            arr[i].weight = info[2*i+1]
            
        ob=Solution()
        print("%.2f" %ob.fractionalknapsack(W,arr,n))

# } Driver Code Ends
